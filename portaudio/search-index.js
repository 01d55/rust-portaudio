var searchIndex = [{ty:"mod",name:"",path:"portaudio",desc:"# Rust-PortAudio"},{ty:"mod",name:"types",path:"portaudio",desc:"Types used in the PortAudio API"},{ty:"struct",name:"PaHostApiInfo",path:"portaudio::types",desc:"A structure containing information about a particular host API."},{ty:"structfield",name:"struct_version",path:"portaudio::types",desc:"The version of the struct",parent:'18055'},{ty:"structfield",name:"host_type",path:"portaudio::types",desc:"The type of the current host",parent:'18055'},{ty:"structfield",name:"name",path:"portaudio::types",desc:"The name of the host",parent:'18055'},{ty:"structfield",name:"device_count",path:"portaudio::types",desc:"The total count of device in the host",parent:'18055'},{ty:"structfield",name:"default_input_device",path:"portaudio::types",desc:"The index to the default input device",parent:'18055'},{ty:"structfield",name:"default_output_device",path:"portaudio::types",desc:"The index to the default output device",parent:'18055'},{ty:"struct",name:"PaHostErrorInfo",path:"portaudio::types",desc:"Structure used to return information about a host error condition."},{ty:"structfield",name:"error_code",path:"portaudio::types",desc:"The code of the error",parent:'18191'},{ty:"structfield",name:"error_text",path:"portaudio::types",desc:"The string which explain the error",parent:'18191'},{ty:"struct",name:"PaDeviceInfo",path:"portaudio::types",desc:"A structure providing information and capabilities of PortAudio devices. Devices may support input, output or both input and output."},{ty:"structfield",name:"struct_version",path:"portaudio::types",desc:"The version of the struct",parent:'18708'},{ty:"structfield",name:"name",path:"portaudio::types",desc:"The name of the devie",parent:'18708'},{ty:"structfield",name:"host_api",path:"portaudio::types",desc:"Host API identifier",parent:'18708'},{ty:"structfield",name:"max_input_channels",path:"portaudio::types",desc:"Maximal number of input channels for this device",parent:'18708'},{ty:"structfield",name:"max_output_channels",path:"portaudio::types",desc:"maximal number of output channel for this device",parent:'18708'},{ty:"structfield",name:"default_low_input_latency",path:"portaudio::types",desc:"The default low latency for input with this device",parent:'18708'},{ty:"structfield",name:"default_low_output_latency",path:"portaudio::types",desc:"The default low latency for output with this device",parent:'18708'},{ty:"structfield",name:"default_high_input_latency",path:"portaudio::types",desc:"The default high latency for input with this device",parent:'18708'},{ty:"structfield",name:"default_high_output_latency",path:"portaudio::types",desc:"The default high latency for output with this device",parent:'18708'},{ty:"structfield",name:"default_sample_rate",path:"portaudio::types",desc:"The default sample rate for this device",parent:'18708'},{ty:"struct",name:"PaStreamParameters",path:"portaudio::types",desc:"Parameters for one direction (input or output) of a stream."},{ty:"structfield",name:"device",path:"portaudio::types",desc:"Index of the device",parent:'20417'},{ty:"structfield",name:"channel_count",path:"portaudio::types",desc:"The number of channels for this device",parent:'20417'},{ty:"structfield",name:"sample_format",path:"portaudio::types",desc:"Sample format of the device",parent:'20417'},{ty:"structfield",name:"suggested_latency",path:"portaudio::types",desc:"The suggested latency for this device",parent:'20417'},{ty:"struct",name:"PaStreamInfo",path:"portaudio::types",desc:"A structure containing unchanging information about an open stream."},{ty:"structfield",name:"struct_version",path:"portaudio::types",desc:"Struct version",parent:'21235'},{ty:"structfield",name:"input_latency",path:"portaudio::types",desc:"The input latency for this open stream",parent:'21235'},{ty:"structfield",name:"output_latency",path:"portaudio::types",desc:"The output latency for this open stream",parent:'21235'},{ty:"structfield",name:"sample_rate",path:"portaudio::types",desc:"The sample rate for this open stream",parent:'21235'},{ty:"enum",name:"PaSampleFormat",path:"portaudio::types",desc:"A type used to specify one or more sample formats."},{ty:"variant",name:"PaFloat32",path:"portaudio::types",desc:"32 bits float sample format",parent:'162'},{ty:"variant",name:"PaInt32",path:"portaudio::types",desc:"32 bits int sample format",parent:'162'},{ty:"variant",name:"PaInt16",path:"portaudio::types",desc:"16 bits int sample format",parent:'162'},{ty:"variant",name:"PaInt8",path:"portaudio::types",desc:"8 bits int sample format",parent:'162'},{ty:"variant",name:"PaUInt8",path:"portaudio::types",desc:"8 bits unsigned int sample format",parent:'162'},{ty:"variant",name:"PaCustomFormat",path:"portaudio::types",desc:"Custom sample format",parent:'162'},{ty:"variant",name:"PaNonInterleaved",path:"portaudio::types",desc:"Non interleaved sample format",parent:'162'},{ty:"enum",name:"PaStreamFlags",path:"portaudio::types",desc:"The flags to pass to a stream"},{ty:"variant",name:"PaNoFlag",path:"portaudio::types",desc:"No flags",parent:'1269'},{ty:"variant",name:"PaClipOff",path:"portaudio::types",desc:"Disable default clipping of out of range samples.",parent:'1269'},{ty:"variant",name:"PaDitherOff",path:"portaudio::types",desc:"Disable default dithering.",parent:'1269'},{ty:"variant",name:"PaNeverDropInput",path:"portaudio::types",desc:"Flag requests that where possible a full duplex stream will not discard overflowed input samples without calling the stream callback.",parent:'1269'},{ty:"variant",name:"PaPrimeOutputBuffersUsingStreamCallback",path:"portaudio::types",desc:"Call the stream callback to fill initial output buffers, rather than the default behavior of priming the buffers with zeros (silence)",parent:'1269'},{ty:"variant",name:"PaPlatformSpecificFlags",path:"portaudio::types",desc:"A mask specifying the platform specific bits.",parent:'1269'},{ty:"enum",name:"PaError",path:"portaudio::types",desc:"Error codes returned by PortAudio functions."},{ty:"variant",name:"PaNoError",path:"portaudio::types",desc:"No Error",parent:'2181'},{ty:"variant",name:"PaNotInitialized",path:"portaudio::types",desc:"Portaudio not initialized",parent:'2181'},{ty:"variant",name:"PaUnanticipatedHostError",path:"portaudio::types",desc:"Unanticipated error from the host",parent:'2181'},{ty:"variant",name:"PaInvalidChannelCount",path:"portaudio::types",desc:"Invalid channel count",parent:'2181'},{ty:"variant",name:"PaInvalidSampleRate",path:"portaudio::types",desc:"Invalid sample rate",parent:'2181'},{ty:"variant",name:"PaInvalidDevice",path:"portaudio::types",desc:"Invalid Device",parent:'2181'},{ty:"variant",name:"PaInvalidFlag",path:"portaudio::types",desc:"Invalid Flag",parent:'2181'},{ty:"variant",name:"PaSampleFormatNotSupported",path:"portaudio::types",desc:"The Sample format is not supported",parent:'2181'},{ty:"variant",name:"PaBadIODeviceCombination",path:"portaudio::types",desc:"Input device not compatible with output device",parent:'2181'},{ty:"variant",name:"PaInsufficientMemory",path:"portaudio::types",desc:"Memory insufficient",parent:'2181'},{ty:"variant",name:"PaBufferTooBig",path:"portaudio::types",desc:"The buffer is too big",parent:'2181'},{ty:"variant",name:"PaBufferTooSmall",path:"portaudio::types",desc:"The buffer is too small",parent:'2181'},{ty:"variant",name:"PaNullCallback",path:"portaudio::types",desc:"Invalid callback",parent:'2181'},{ty:"variant",name:"PaBadStreamPtr",path:"portaudio::types",desc:"Invalid Stream",parent:'2181'},{ty:"variant",name:"PaTimedOut",path:"portaudio::types",desc:"Time out",parent:'2181'},{ty:"variant",name:"PaInternalError",path:"portaudio::types",desc:"Portaudio internal error",parent:'2181'},{ty:"variant",name:"PaDeviceUnavailable",path:"portaudio::types",desc:"Device unavailable",parent:'2181'},{ty:"variant",name:"PaIncompatibleHostApiSpecificStreamInfo",path:"portaudio::types",desc:"Stream info not compatible with the host",parent:'2181'},{ty:"variant",name:"PaStreamIsStopped",path:"portaudio::types",desc:"The stream is stopped",parent:'2181'},{ty:"variant",name:"PaStreamIsNotStopped",path:"portaudio::types",desc:"The stream is not stopped",parent:'2181'},{ty:"variant",name:"PaInputOverflowed",path:"portaudio::types",desc:"The input stream has overflowed",parent:'2181'},{ty:"variant",name:"PaOutputUnderflowed",path:"portaudio::types",desc:"The output has overflowed",parent:'2181'},{ty:"variant",name:"PaHostApiNotFound",path:"portaudio::types",desc:"The host API is not found by Portaudio",parent:'2181'},{ty:"variant",name:"PaInvalidHostApi",path:"portaudio::types",desc:"The host API is invalid",parent:'2181'},{ty:"variant",name:"PaCanNotReadFromACallbackStream",path:"portaudio::types",desc:"Portaudio cannot read from the callback stream",parent:'2181'},{ty:"variant",name:"PaCanNotWriteToACallbackStream",path:"portaudio::types",desc:"Portaudio cannot wrtie to the callback stream",parent:'2181'},{ty:"variant",name:"PaCanNotReadFromAnOutputOnlyStream",path:"portaudio::types",desc:"Portaudio cannot read from an output only stream",parent:'2181'},{ty:"variant",name:"PaCanNotWriteToAnInputOnlyStream",path:"portaudio::types",desc:"Portaudio cannot write to an input only stream",parent:'2181'},{ty:"variant",name:"PaIncompatibleStreamHostApi",path:"portaudio::types",desc:"The stream is not compatible with the host API",parent:'2181'},{ty:"variant",name:"PaBadBufferPtr",path:"portaudio::types",desc:"Invalid buffer",parent:'2181'},{ty:"enum",name:"PaHostApiTypeId",path:"portaudio::types",desc:"Unchanging unique identifiers for each supported host API"},{ty:"variant",name:"PaInDevelopment",path:"portaudio::types",desc:"In development host",parent:'14785'},{ty:"variant",name:"PaDirectSound",path:"portaudio::types",desc:"Direct sound",parent:'14785'},{ty:"variant",name:"PaMME",path:"portaudio::types",desc:"MMe API",parent:'14785'},{ty:"variant",name:"PaASIO",path:"portaudio::types",desc:"ASIO API",parent:'14785'},{ty:"variant",name:"PaSoundManager",path:"portaudio::types",desc:"Sound manager API",parent:'14785'},{ty:"variant",name:"PaCoreAudio",path:"portaudio::types",desc:"Core Audio API",parent:'14785'},{ty:"variant",name:"PaOSS",path:"portaudio::types",desc:"OSS API",parent:'14785'},{ty:"variant",name:"PaALSA",path:"portaudio::types",desc:"Alsa API",parent:'14785'},{ty:"variant",name:"PaAL",path:"portaudio::types",desc:"AL API",parent:'14785'},{ty:"variant",name:"PaBeOS",path:"portaudio::types",desc:"BeOS API",parent:'14785'},{ty:"variant",name:"PaWDMKS",path:"portaudio::types",desc:"WDMKS",parent:'14785'},{ty:"variant",name:"PaJACK",path:"portaudio::types",desc:"Jack API",parent:'14785'},{ty:"variant",name:"PaWASAPI",path:"portaudio::types",desc:"WASAPI",parent:'14785'},{ty:"variant",name:"PaAudioScienceHPI",path:"portaudio::types",desc:"Audio Science HPI",parent:'14785'},{ty:"typedef",name:"PaDeviceIndex",path:"portaudio::types",desc:"The type used to refer to audio devices. Values of this type usually range from 0 to (pa::get_device_count()-1)"},{ty:"typedef",name:"PaHostApiIndex",path:"portaudio::types",desc:"The type used to enumerate to host APIs at runtime.\nValues of this type range from 0 to (pa::get_host_api_count()-1)."},{ty:"typedef",name:"PaTime",path:"portaudio::types",desc:"The type used to represent monotonic time in seconds."},{ty:"static",name:"PaNoDevice",path:"portaudio::types",desc:"A special PaDeviceIndex value indicating that no device is available, or should be used."},{ty:"static",name:"PaUseHostApiSpecificDeviceSpecification",path:"portaudio::types",desc:"A special PaDeviceIndex value indicating that the device(s) to be used are specified in the host api specific stream info structure."},{ty:"method",name:"clone",path:"portaudio::types",desc:"",parent:'162'},{ty:"method",name:"eq",path:"portaudio::types",desc:"",parent:'162'},{ty:"method",name:"ne",path:"portaudio::types",desc:"",parent:'162'},{ty:"method",name:"lt",path:"portaudio::types",desc:"",parent:'162'},{ty:"method",name:"le",path:"portaudio::types",desc:"",parent:'162'},{ty:"method",name:"gt",path:"portaudio::types",desc:"",parent:'162'},{ty:"method",name:"ge",path:"portaudio::types",desc:"",parent:'162'},{ty:"method",name:"to_str",path:"portaudio::types",desc:"",parent:'162'},{ty:"method",name:"clone",path:"portaudio::types",desc:"",parent:'1269'},{ty:"method",name:"eq",path:"portaudio::types",desc:"",parent:'1269'},{ty:"method",name:"ne",path:"portaudio::types",desc:"",parent:'1269'},{ty:"method",name:"lt",path:"portaudio::types",desc:"",parent:'1269'},{ty:"method",name:"le",path:"portaudio::types",desc:"",parent:'1269'},{ty:"method",name:"gt",path:"portaudio::types",desc:"",parent:'1269'},{ty:"method",name:"ge",path:"portaudio::types",desc:"",parent:'1269'},{ty:"method",name:"to_str",path:"portaudio::types",desc:"",parent:'1269'},{ty:"method",name:"clone",path:"portaudio::types",desc:"",parent:'2181'},{ty:"method",name:"eq",path:"portaudio::types",desc:"",parent:'2181'},{ty:"method",name:"ne",path:"portaudio::types",desc:"",parent:'2181'},{ty:"method",name:"lt",path:"portaudio::types",desc:"",parent:'2181'},{ty:"method",name:"le",path:"portaudio::types",desc:"",parent:'2181'},{ty:"method",name:"gt",path:"portaudio::types",desc:"",parent:'2181'},{ty:"method",name:"ge",path:"portaudio::types",desc:"",parent:'2181'},{ty:"method",name:"to_str",path:"portaudio::types",desc:"",parent:'2181'},{ty:"method",name:"clone",path:"portaudio::types",desc:"",parent:'14785'},{ty:"method",name:"eq",path:"portaudio::types",desc:"",parent:'14785'},{ty:"method",name:"ne",path:"portaudio::types",desc:"",parent:'14785'},{ty:"method",name:"lt",path:"portaudio::types",desc:"",parent:'14785'},{ty:"method",name:"le",path:"portaudio::types",desc:"",parent:'14785'},{ty:"method",name:"gt",path:"portaudio::types",desc:"",parent:'14785'},{ty:"method",name:"ge",path:"portaudio::types",desc:"",parent:'14785'},{ty:"method",name:"to_str",path:"portaudio::types",desc:"",parent:'14785'},{ty:"method",name:"clone",path:"portaudio::types",desc:"",parent:'18191'},{ty:"method",name:"eq",path:"portaudio::types",desc:"",parent:'18191'},{ty:"method",name:"ne",path:"portaudio::types",desc:"",parent:'18191'},{ty:"method",name:"lt",path:"portaudio::types",desc:"",parent:'18191'},{ty:"method",name:"le",path:"portaudio::types",desc:"",parent:'18191'},{ty:"method",name:"gt",path:"portaudio::types",desc:"",parent:'18191'},{ty:"method",name:"ge",path:"portaudio::types",desc:"",parent:'18191'},{ty:"method",name:"to_str",path:"portaudio::types",desc:"",parent:'18191'},{ty:"method",name:"clone",path:"portaudio::types",desc:"",parent:'18708'},{ty:"method",name:"eq",path:"portaudio::types",desc:"",parent:'18708'},{ty:"method",name:"ne",path:"portaudio::types",desc:"",parent:'18708'},{ty:"method",name:"lt",path:"portaudio::types",desc:"",parent:'18708'},{ty:"method",name:"le",path:"portaudio::types",desc:"",parent:'18708'},{ty:"method",name:"gt",path:"portaudio::types",desc:"",parent:'18708'},{ty:"method",name:"ge",path:"portaudio::types",desc:"",parent:'18708'},{ty:"method",name:"to_str",path:"portaudio::types",desc:"",parent:'18708'},{ty:"method",name:"clone",path:"portaudio::types",desc:"",parent:'20417'},{ty:"method",name:"eq",path:"portaudio::types",desc:"",parent:'20417'},{ty:"method",name:"ne",path:"portaudio::types",desc:"",parent:'20417'},{ty:"method",name:"lt",path:"portaudio::types",desc:"",parent:'20417'},{ty:"method",name:"le",path:"portaudio::types",desc:"",parent:'20417'},{ty:"method",name:"gt",path:"portaudio::types",desc:"",parent:'20417'},{ty:"method",name:"ge",path:"portaudio::types",desc:"",parent:'20417'},{ty:"method",name:"to_str",path:"portaudio::types",desc:"",parent:'20417'},{ty:"method",name:"clone",path:"portaudio::types",desc:"",parent:'21235'},{ty:"method",name:"eq",path:"portaudio::types",desc:"",parent:'21235'},{ty:"method",name:"ne",path:"portaudio::types",desc:"",parent:'21235'},{ty:"method",name:"lt",path:"portaudio::types",desc:"",parent:'21235'},{ty:"method",name:"le",path:"portaudio::types",desc:"",parent:'21235'},{ty:"method",name:"gt",path:"portaudio::types",desc:"",parent:'21235'},{ty:"method",name:"ge",path:"portaudio::types",desc:"",parent:'21235'},{ty:"method",name:"to_str",path:"portaudio::types",desc:"",parent:'21235'},{ty:"mod",name:"pa",path:"portaudio",desc:"The portable PortAudio API."},{ty:"struct",name:"PaStream",path:"portaudio::pa",desc:"Representation of an audio stream, where the format of the stream is defined by the S parameter."},{ty:"fn",name:"get_version",path:"portaudio::pa",desc:"Retrieve the release number of the currently running PortAudio build."},{ty:"fn",name:"get_version_text",path:"portaudio::pa",desc:"Retrieve a textual description of the current PortAudio build."},{ty:"fn",name:"get_error_text",path:"portaudio::pa",desc:"Translate the supplied PortAudio error code into a human readable message."},{ty:"fn",name:"initialize",path:"portaudio::pa",desc:"Library initialization function - call this before using PortAudio.\nThis function initializes internal data structures and prepares underlying host APIs for use. \nWith the exception of get_version(), get_version_text(), and get_error_text(), \nthis function MUST be called before using any other PortAudio API functions."},{ty:"fn",name:"terminate",path:"portaudio::pa",desc:"Library termination function - call this when finished using PortAudio.\nThis function deallocates all resources allocated by PortAudio since it was initialized by a call to initialize(). \nIn cases where initialise() has been called multiple times, each call must be matched with a corresponding call to terminate(). \nThe final matching call to terminate() will automatically close any PortAudio streams that are still open."},{ty:"fn",name:"get_host_api_count",path:"portaudio::pa",desc:"Retrieve the number of available host APIs.\nEven if a host API is available it may have no devices available."},{ty:"fn",name:"get_default_host_api",path:"portaudio::pa",desc:"Retrieve the index of the default host API.\nThe default host API will be the lowest common denominator host API \non the current platform and is unlikely to provide the best performance."},{ty:"fn",name:"get_host_api_info",path:"portaudio::pa",desc:"Retrieve a pointer to a structure containing information about a specific host Api."},{ty:"fn",name:"host_api_type_id_to_host_api_index",path:"portaudio::pa",desc:"Convert a static host API unique identifier, into a runtime host API index."},{ty:"fn",name:"host_api_devide_index_to_device_index",path:"portaudio::pa",desc:"Convert a host-API-specific device index to standard PortAudio device index.\nThis function may be used in conjunction with the deviceCount field of PaHostApiInfo \nto enumerate all devices for the specified host API."},{ty:"fn",name:"get_last_host_error_info",path:"portaudio::pa",desc:"Return information about the last host error encountered.\nThe error information returned by get_last_host_error_info() will never be modified asynchronously\nby errors occurring in other PortAudio owned threads (such as the thread that manages the stream callback.)"},{ty:"fn",name:"get_device_count",path:"portaudio::pa",desc:"Retrieve the number of available devices. The number of available devices may be zero."},{ty:"fn",name:"get_default_input_device",path:"portaudio::pa",desc:"Retrieve the index of the default input device.\nThe result can be used in the inputDevice parameter to open_stream()."},{ty:"fn",name:"get_default_output_device",path:"portaudio::pa",desc:"Retrieve the index of the default output device. The result can be\nused in the outputDevice parameter to open_stream()."},{ty:"fn",name:"get_device_info",path:"portaudio::pa",desc:"Retrieve a pointer to a PaDeviceInfo structure containing information about the specified device."},{ty:"fn",name:"is_format_supported",path:"portaudio::pa",desc:"Determine whether it would be possible to open a stream with the specified parameters."},{ty:"fn",name:"get_sample_size",path:"portaudio::pa",desc:"Retrieve the size of a given sample format in bytes."},{ty:"fn",name:"sleep",path:"portaudio::pa",desc:"Put the caller to sleep for at least 'msec' milliseconds.\nThis function is provided only as a convenience for authors of portable code (such as the tests and examples in the PortAudio distribution.)"},{ty:"method",name:"new",path:"portaudio::pa",desc:"Constructor for PaStream.",parent:'22267'},{ty:"method",name:"open",path:"portaudio::pa",desc:"Opens a stream for either input, output or both.",parent:'22267'},{ty:"method",name:"open_default",path:"portaudio::pa",desc:"A simplified version of open() that opens the default input and/or output devices.",parent:'22267'},{ty:"method",name:"close",path:"portaudio::pa",desc:"Closes an audio stream. If the audio stream is active it discards any pending buffers as if abort_tream() had been called.",parent:'22267'},{ty:"method",name:"start",path:"portaudio::pa",desc:"Commences audio processing.",parent:'22267'},{ty:"method",name:"stop",path:"portaudio::pa",desc:"Terminates audio processing. It waits until all pending audio buffers have been played before it returns.",parent:'22267'},{ty:"method",name:"abort",path:"portaudio::pa",desc:"Terminates audio processing immediately without waiting for pending buffers to complete.",parent:'22267'},{ty:"method",name:"is_stopped",path:"portaudio::pa",desc:"Determine whether the stream is stopped.\nA stream is considered to be stopped prior to a successful call to start_stream and after a successful call to stop_stream or abort_stream. \nIf a stream callback returns a value other than PaContinue the stream is NOT considered to be stopped.",parent:'22267'},{ty:"method",name:"is_active",path:"portaudio::pa",desc:"Determine whether the stream is active. A stream is active after a successful call to start_stream(),\nuntil it becomes inactive either as a result of a call to stop_stream() or abort_stream(),\nor as a result of a return value other than paContinue from the stream callback. \nIn the latter case, the stream is considered inactive after the last buffer has finished playing.",parent:'22267'},{ty:"method",name:"get_stream_time",path:"portaudio::pa",desc:"Returns the current time in seconds for a stream according to the same\nclock used to generate callback PaStreamCallbackTimeInfo timestamps. \nThe time values are monotonically increasing and have unspecified origin.",parent:'22267'},{ty:"method",name:"get_stream_cpu_load",path:"portaudio::pa",desc:"Retrieve CPU usage information for the specified stream.",parent:'22267'},{ty:"method",name:"get_stream_read_available",path:"portaudio::pa",desc:"Retrieve the number of frames that can be read from the stream without waiting.",parent:'22267'},{ty:"method",name:"get_stream_write_available",path:"portaudio::pa",desc:"Retrieve the number of frames that can be written to the stream without waiting.",parent:'22267'},{ty:"method",name:"write",path:"portaudio::pa",desc:"Write samples to an output stream.\nThis function doesn't return until the entire buffer has been consumed - this may involve waiting for the operating system to consume the data.\n \n# Arguments \n* output_buffer - The buffer contains samples in the format specified by S.\n* frames_per_buffer - The number of frames in the buffer.",parent:'22267'},{ty:"method",name:"get_stream_info",path:"portaudio::pa",desc:"Retrieve a PaStreamInfo structure containing information about the specified stream.",parent:'22267'}];var allPaths = {'37':{type:'typedef',name:'PaHostApiIndex'},'22267':{type:'struct',name:'PaStream'},'21235':{type:'struct',name:'PaStreamInfo'},'2194':{type:'variant',name:'PaBadIODeviceCombination'},'1279':{type:'variant',name:'PaPrimeOutputBuffersUsingStreamCallback'},'22053':{type:'fn',name:'get_host_api_info'},'22085':{type:'fn',name:'host_api_type_id_to_host_api_index'},'20417':{type:'struct',name:'PaStreamParameters'},'22119':{type:'fn',name:'get_last_host_error_info'},'14807':{type:'variant',name:'PaWDMKS'},'22150':{type:'fn',name:'get_default_output_device'},'2199':{type:'variant',name:'PaBadStreamPtr'},'2198':{type:'variant',name:'PaNullCallback'},'1271':{type:'variant',name:'PaNoFlag'},'2192':{type:'variant',name:'PaInvalidFlag'},'22021':{type:'fn',name:'initialize'},'14789':{type:'variant',name:'PaDirectSound'},'22158':{type:'fn',name:'get_device_info'},'2209':{type:'variant',name:'PaInvalidHostApi'},'21994':{type:'fn',name:'get_version_text'},'2196':{type:'variant',name:'PaBufferTooBig'},'2193':{type:'variant',name:'PaSampleFormatNotSupported'},'2188':{type:'variant',name:'PaUnanticipatedHostError'},'2187':{type:'variant',name:'PaNotInitialized'},'2204':{type:'variant',name:'PaStreamIsStopped'},'14809':{type:'variant',name:'PaJACK'},'2210':{type:'variant',name:'PaCanNotReadFromACallbackStream'},'1275':{type:'variant',name:'PaDitherOff'},'166':{type:'variant',name:'PaInt32'},'0':{type:'mod',name:'portaudio'},'21986':{type:'fn',name:'get_version'},'22134':{type:'fn',name:'get_device_count'},'14799':{type:'variant',name:'PaOSS'},'1273':{type:'variant',name:'PaClipOff'},'14803':{type:'variant',name:'PaAL'},'14785':{type:'enum',name:'PaHostApiTypeId'},'22005':{type:'fn',name:'get_error_text'},'14805':{type:'variant',name:'PaBeOS'},'22045':{type:'fn',name:'get_default_host_api'},'14811':{type:'variant',name:'PaWASAPI'},'2203':{type:'variant',name:'PaIncompatibleHostApiSpecificStreamInfo'},'2215':{type:'variant',name:'PaBadBufferPtr'},'14797':{type:'variant',name:'PaCoreAudio'},'14787':{type:'variant',name:'PaInDevelopment'},'2202':{type:'variant',name:'PaDeviceUnavailable'},'162':{type:'enum',name:'PaSampleFormat'},'22098':{type:'fn',name:'host_api_devide_index_to_device_index'},'1281':{type:'variant',name:'PaPlatformSpecificFlags'},'18191':{type:'struct',name:'PaHostErrorInfo'},'174':{type:'variant',name:'PaCustomFormat'},'22142':{type:'fn',name:'get_default_input_device'},'2181':{type:'enum',name:'PaError'},'2183':{type:'variant',name:'PaNoError'},'172':{type:'variant',name:'PaUInt8'},'2200':{type:'variant',name:'PaTimedOut'},'21971':{type:'mod',name:'pa'},'1269':{type:'enum',name:'PaStreamFlags'},'9':{type:'mod',name:'types'},'2190':{type:'variant',name:'PaInvalidSampleRate'},'176':{type:'variant',name:'PaNonInterleaved'},'2211':{type:'variant',name:'PaCanNotWriteToACallbackStream'},'2207':{type:'variant',name:'PaOutputUnderflowed'},'14791':{type:'variant',name:'PaMME'},'14801':{type:'variant',name:'PaALSA'},'14795':{type:'variant',name:'PaSoundManager'},'2197':{type:'variant',name:'PaBufferTooSmall'},'170':{type:'variant',name:'PaInt8'},'14813':{type:'variant',name:'PaAudioScienceHPI'},'2206':{type:'variant',name:'PaInputOverflowed'},'2189':{type:'variant',name:'PaInvalidChannelCount'},'22037':{type:'fn',name:'get_host_api_count'},'2208':{type:'variant',name:'PaHostApiNotFound'},'2212':{type:'variant',name:'PaCanNotReadFromAnOutputOnlyStream'},'22247':{type:'fn',name:'sleep'},'2213':{type:'variant',name:'PaCanNotWriteToAnInputOnlyStream'},'22234':{type:'fn',name:'get_sample_size'},'2201':{type:'variant',name:'PaInternalError'},'168':{type:'variant',name:'PaInt16'},'2191':{type:'variant',name:'PaInvalidDevice'},'14793':{type:'variant',name:'PaASIO'},'2214':{type:'variant',name:'PaIncompatibleStreamHostApi'},'2195':{type:'variant',name:'PaInsufficientMemory'},'1277':{type:'variant',name:'PaNeverDropInput'},'22190':{type:'fn',name:'is_format_supported'},'18055':{type:'struct',name:'PaHostApiInfo'},'22':{type:'typedef',name:'PaDeviceIndex'},'164':{type:'variant',name:'PaFloat32'},'22029':{type:'fn',name:'terminate'},'18708':{type:'struct',name:'PaDeviceInfo'},'40':{type:'typedef',name:'PaTime'},'2205':{type:'variant',name:'PaStreamIsNotStopped'}};